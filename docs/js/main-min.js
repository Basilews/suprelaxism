const pictureList=[{id:"id0",author:"Kazimir Malevich",date:"1915",name:"Red square and black square",figures:[{speed:10},{speed:20}]},{id:"id1",author:"Nadezhda Udaltsova",date:"1916",name:"Unnamed",figures:[{speed:10},{speed:25},{speed:25},{speed:15},{speed:10}]},{id:"id2",author:"Nikolaj Suetin",date:"1915",name:"Suprematism",figures:[{speed:10},{speed:15},{speed:20},{speed:25},{speed:30},{speed:20},{speed:25},{speed:30},{speed:10},{speed:15},{speed:20},{speed:20},{speed:10},{speed:30},{speed:25}]}],gallery=document.getElementsByClassName("gallery")[0],canvas=document.getElementsByClassName("pictures")[0],resetBtn=document.getElementsByClassName("reset")[0],checkbox=document.getElementById("mode"),superModeToggle=document.getElementById("super");gallery.addEventListener("click",e=>{if("previewContainer"===e.target.parentElement.className){const t=parseInt(e.target.parentElement.id,10),s=document.getElementsByClassName("pictureContainer")[0],{offsetTop:i}=s;new Picture(pictureList[t]),window.scrollTo(0,i)}});class Picture{constructor(e){this.figures=new Array(e.figures.length),this.perspective=1e3,this.x=0,this.y=0,this.drawPicture(e),this.picture=document.getElementById(e.id),this.deviceParallax=this.deviceParallax.bind(this),this.deviceTilt=this.deviceTilt.bind(this),this.parallax=this.parallax.bind(this),this.tiltPicture=this.tiltPicture.bind(this),this.parallaxAndTilt=this.parallaxAndTilt.bind(this),this.setMode=this.setMode.bind(this),this.onSuperModeToggle=this.onSuperModeToggle.bind(this),this.reset=this.reset.bind(this),superModeToggle.checked?this.setMode({super:"on"}):this.setMode({target:{checked:checkbox.checked}}),checkbox.addEventListener("change",this.setMode),superModeToggle.addEventListener("change",this.onSuperModeToggle),resetBtn.addEventListener("click",this.reset)}onSuperModeToggle(e){e.target.checked?(checkbox.disabled=!0,this.setMode({super:"on"})):(checkbox.disabled=!1,this.setMode({super:"off"}))}parallaxAndTilt(e){const{clientX:t,clientY:s}=e;if(!this.x&&!this.y)return this.x=t,void(this.y=s);this.figures.forEach(t=>{const{xPos:s,yPos:i}=this.findCoordinates(t,e,75),r=Math.ceil(t.speed/2);t.el.style.transform=`translate3d(${s}px, ${i}px, ${50+r}px)`}),this.setTransform(e)}setMode(e){"on"===e.super?(checkbox.checked?this.picture.removeEventListener("mousemove",this.tiltPicture):(this.picture.classList.add("tilt"),window.removeEventListener("mousemove",this.parallax)),this.picture.addEventListener("mousemove",this.parallaxAndTilt)):"off"===e.super?(checkbox.checked?(window.removeEventListener("mousemove",this.parallax),this.picture.addEventListener("mousemove",this.tiltPicture,{passive:!0})):(this.picture.classList.remove("tilt"),this.picture.removeEventListener("mousemove",this.tiltPicture),window.addEventListener("mousemove",this.parallax)),this.picture.removeEventListener("mousemove",this.parallaxAndTilt)):e.target.checked?(this.picture.classList.add("tilt"),window.removeEventListener("mousemove",this.parallax),this.picture.addEventListener("mousemove",this.tiltPicture,{passive:!0}),window.DeviceMotionEvent&&(window.removeEventListener("devicemotion",this.deviceParallax),window.addEventListener("devicemotion",this.deviceTilt,{passive:!0}))):(this.picture.classList.remove("tilt"),this.picture.removeEventListener("mousemove",this.tiltPicture),window.addEventListener("mousemove",this.parallax,{passive:!0}),window.DeviceMotionEvent&&(window.removeEventListener("devicemotion",this.deviceTilt),window.addEventListener("devicemotion",this.deviceParallax,{passive:!0})))}deviceParallax(e){const[t,s]=this.processGyro(e);requestAnimationFrame(()=>this.moveObjects({clientX:t,clientY:s,isGyro:!0}))}deviceTilt(e){const[t,s]=this.processGyro(e);requestAnimationFrame(()=>this.tiltPicture({clientX:t,clientY:s,isGyro:!0}))}processGyro(e){const t=e.rotationRate.beta.toPrecision(2),s=e.rotationRate.alpha.toPrecision(2);return this.x+=parseFloat(t),this.y+=parseFloat(s),[this.x,this.y]}drawPicture(e){canvas.innerHTML=`\n      <li class="pictureContainer">\n        <div class="description">\n          <p class="name">«${e.name}»</p>\n          <p class="author">${e.author}, ${e.date}</p>\n        </div>\n        <div id="${e.id}" class="picture">\n          ${e.figures.map((e,t)=>`<div class="fig${t} figure"></div>`)}\n        </div>\n      </li>\n    `,e.figures.forEach((e,t)=>{const s=document.getElementsByClassName(`fig${t}`)[0];this.figures[t]={el:s,speed:e.speed}})}findCoordinates(e,t,s){return{xPos:t.isGyro?-t.clientX*e.speed/s:(this.x-t.clientX)*e.speed/s,yPos:t.isGyro?-t.clientY*e.speed/s:(this.y-t.clientY)*e.speed/s}}findCenterCoordinates(){return[this.picture.offsetLeft+this.picture.offsetWidth/2,this.picture.offsetTop+this.picture.offsetHeight/2]}parallax(e){requestAnimationFrame(()=>this.moveObjects(e))}moveObjects(e){const t=e.isGyro?800:300;if(!e.isGyro&&!this.x&&!this.y)return this.x=e.clientX,void(this.y=e.clientY);this.figures.forEach(s=>{const{xPos:i,yPos:r}=this.findCoordinates(s,e,t);s.el.style.transform=`translate3d(${i}px, ${r}px, 0)`})}tiltPicture(e){this.setTransform(e),this.figures.forEach(e=>{e.el.style.transform=`translateZ(${3*e.speed}px)`})}setTransform(e){const{clientX:t,clientY:s}=e,i=e.isGyro?100:15,[r,n]=this.findCenterCoordinates();let o=-(n-s)/i;const a=(r-t)/i;e.isGyro&&(o=-o);const d=document.getElementById(this.picture.id),c="rtl"===window.getComputedStyle(d,null).getPropertyValue("direction");this.picture.style.transform=c?`perspective(${this.perspective}px) rotateX(${o}deg) rotateY(${a}deg) scale(0.7)`:`perspective(${this.perspective}px) rotateX(${o}deg) rotateY(${a}deg)`}reset(){this.picture.style.transform=this.picture.style.transform.indexOf("scale(0.7)")>=0?`perspective(${this.perspective}px) scale(0.7)`:`perspective(${this.perspective}px)`,this.figures.forEach(e=>e.el.style.transform="null"),this.x=this.y=0}}new Picture(pictureList[0]);